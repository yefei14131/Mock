<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.yefei.qa.mock.model.gen.dao.TblMappingGlobalVarMapper">
    <resultMap id="BaseResultMap" type="org.yefei.qa.mock.model.gen.pojo.TblMappingGlobalVar">
        <id column="globalVarID" jdbcType="INTEGER" property="globalVarID"/>
        <result column="requestID" jdbcType="INTEGER" property="requestID"/>
        <result column="protocol" jdbcType="VARCHAR" property="protocol"/>
        <result column="varName" jdbcType="VARCHAR" property="varName"/>
        <result column="varValue" jdbcType="VARCHAR" property="varValue"/>
        <result column="updateTime" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        globalVarID, requestID, protocol, varName, varValue, updateTime
    </sql>
    <select id="selectByExample" parameterType="org.yefei.qa.mock.model.gen.pojo.TblMappingGlobalVarExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from tbl_mapping_global_var
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from tbl_mapping_global_var
        where globalVarID = #{globalVarID,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from tbl_mapping_global_var
        where globalVarID = #{globalVarID,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="org.yefei.qa.mock.model.gen.pojo.TblMappingGlobalVarExample">
        delete from tbl_mapping_global_var
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="org.yefei.qa.mock.model.gen.pojo.TblMappingGlobalVar">
        <selectKey keyProperty="globalVarID" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into tbl_mapping_global_var (requestID, protocol, varName,
        varValue, updateTime)
        values (#{requestID,jdbcType=INTEGER}, #{protocol,jdbcType=VARCHAR}, #{varName,jdbcType=VARCHAR},
        #{varValue,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="org.yefei.qa.mock.model.gen.pojo.TblMappingGlobalVar">
        <selectKey keyProperty="globalVarID" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into tbl_mapping_global_var
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="requestID != null">
                requestID,
            </if>
            <if test="protocol != null">
                protocol,
            </if>
            <if test="varName != null">
                varName,
            </if>
            <if test="varValue != null">
                varValue,
            </if>
            <if test="updateTime != null">
                updateTime,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="requestID != null">
                #{requestID,jdbcType=INTEGER},
            </if>
            <if test="protocol != null">
                #{protocol,jdbcType=VARCHAR},
            </if>
            <if test="varName != null">
                #{varName,jdbcType=VARCHAR},
            </if>
            <if test="varValue != null">
                #{varValue,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="org.yefei.qa.mock.model.gen.pojo.TblMappingGlobalVarExample"
            resultType="java.lang.Long">
        select count(*) from tbl_mapping_global_var
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update tbl_mapping_global_var
        <set>
            <if test="record.globalVarID != null">
                globalVarID = #{record.globalVarID,jdbcType=INTEGER},
            </if>
            <if test="record.requestID != null">
                requestID = #{record.requestID,jdbcType=INTEGER},
            </if>
            <if test="record.protocol != null">
                protocol = #{record.protocol,jdbcType=VARCHAR},
            </if>
            <if test="record.varName != null">
                varName = #{record.varName,jdbcType=VARCHAR},
            </if>
            <if test="record.varValue != null">
                varValue = #{record.varValue,jdbcType=VARCHAR},
            </if>
            <if test="record.updateTime != null">
                updateTime = #{record.updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update tbl_mapping_global_var
        set globalVarID = #{record.globalVarID,jdbcType=INTEGER},
        requestID = #{record.requestID,jdbcType=INTEGER},
        protocol = #{record.protocol,jdbcType=VARCHAR},
        varName = #{record.varName,jdbcType=VARCHAR},
        varValue = #{record.varValue,jdbcType=VARCHAR},
        updateTime = #{record.updateTime,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="org.yefei.qa.mock.model.gen.pojo.TblMappingGlobalVar">
        update tbl_mapping_global_var
        <set>
            <if test="requestID != null">
                requestID = #{requestID,jdbcType=INTEGER},
            </if>
            <if test="protocol != null">
                protocol = #{protocol,jdbcType=VARCHAR},
            </if>
            <if test="varName != null">
                varName = #{varName,jdbcType=VARCHAR},
            </if>
            <if test="varValue != null">
                varValue = #{varValue,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                updateTime = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where globalVarID = #{globalVarID,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="org.yefei.qa.mock.model.gen.pojo.TblMappingGlobalVar">
        update tbl_mapping_global_var
        set requestID = #{requestID,jdbcType=INTEGER},
        protocol = #{protocol,jdbcType=VARCHAR},
        varName = #{varName,jdbcType=VARCHAR},
        varValue = #{varValue,jdbcType=VARCHAR},
        updateTime = #{updateTime,jdbcType=TIMESTAMP}
        where globalVarID = #{globalVarID,jdbcType=INTEGER}
    </update>
</mapper>