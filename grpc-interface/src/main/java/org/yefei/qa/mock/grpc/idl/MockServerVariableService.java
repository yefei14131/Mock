// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MockServerVariableService.proto

package org.yefei.qa.mock.grpc.idl;

public final class MockServerVariableService {
  private MockServerVariableService() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_mock_server_grpc_VariableDefineRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_mock_server_grpc_VariableDefineRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_mock_server_grpc_Variable_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_mock_server_grpc_Variable_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_mock_server_grpc_VariableDefineResp_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_mock_server_grpc_VariableDefineResp_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\037MockServerVariableService.proto\022\020mock." +
      "server.grpc\"I\n\025VariableDefineRequest\0220\n\014" +
      "variableList\030\001 \003(\0132\032.mock.server.grpc.Va" +
      "riable\"\'\n\010Variable\022\014\n\004name\030\001 \001(\t\022\r\n\005valu" +
      "e\030\002 \001(\t\"W\n\022VariableDefineResp\022\017\n\007success" +
      "\030\001 \001(\010\0220\n\014variableList\030\002 \003(\0132\032.mock.serv" +
      "er.grpc.Variable2o\n\017VariableService\022\\\n\tP" +
      "reDefine\022\'.mock.server.grpc.VariableDefi" +
      "neRequest\032$.mock.server.grpc.VariableDef" +
      "ineResp\"\000B\036\n\032org.yefei.qa.mock.grpc.idlP",
      "\001b\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_mock_server_grpc_VariableDefineRequest_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_mock_server_grpc_VariableDefineRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_mock_server_grpc_VariableDefineRequest_descriptor,
        new java.lang.String[] { "VariableList", });
    internal_static_mock_server_grpc_Variable_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_mock_server_grpc_Variable_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_mock_server_grpc_Variable_descriptor,
        new java.lang.String[] { "Name", "Value", });
    internal_static_mock_server_grpc_VariableDefineResp_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_mock_server_grpc_VariableDefineResp_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_mock_server_grpc_VariableDefineResp_descriptor,
        new java.lang.String[] { "Success", "VariableList", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
