// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MockServerVariableService.proto

package org.yefei.qa.mock.grpc.idl;

/**
 * Protobuf type {@code mock.server.grpc.VariableDefineRequest}
 */
public  final class VariableDefineRequest extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:mock.server.grpc.VariableDefineRequest)
    VariableDefineRequestOrBuilder {
  // Use VariableDefineRequest.newBuilder() to construct.
  private VariableDefineRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private VariableDefineRequest() {
    variableList_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private VariableDefineRequest(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
              variableList_ = new java.util.ArrayList<org.yefei.qa.mock.grpc.idl.Variable>();
              mutable_bitField0_ |= 0x00000001;
            }
            variableList_.add(
                input.readMessage(org.yefei.qa.mock.grpc.idl.Variable.parser(), extensionRegistry));
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
        variableList_ = java.util.Collections.unmodifiableList(variableList_);
      }
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.yefei.qa.mock.grpc.idl.MockServerVariableService.internal_static_mock_server_grpc_VariableDefineRequest_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.yefei.qa.mock.grpc.idl.MockServerVariableService.internal_static_mock_server_grpc_VariableDefineRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.yefei.qa.mock.grpc.idl.VariableDefineRequest.class, org.yefei.qa.mock.grpc.idl.VariableDefineRequest.Builder.class);
  }

  public static final int VARIABLELIST_FIELD_NUMBER = 1;
  private java.util.List<org.yefei.qa.mock.grpc.idl.Variable> variableList_;
  /**
   * <code>repeated .mock.server.grpc.Variable variableList = 1;</code>
   */
  public java.util.List<org.yefei.qa.mock.grpc.idl.Variable> getVariableListList() {
    return variableList_;
  }
  /**
   * <code>repeated .mock.server.grpc.Variable variableList = 1;</code>
   */
  public java.util.List<? extends org.yefei.qa.mock.grpc.idl.VariableOrBuilder> 
      getVariableListOrBuilderList() {
    return variableList_;
  }
  /**
   * <code>repeated .mock.server.grpc.Variable variableList = 1;</code>
   */
  public int getVariableListCount() {
    return variableList_.size();
  }
  /**
   * <code>repeated .mock.server.grpc.Variable variableList = 1;</code>
   */
  public org.yefei.qa.mock.grpc.idl.Variable getVariableList(int index) {
    return variableList_.get(index);
  }
  /**
   * <code>repeated .mock.server.grpc.Variable variableList = 1;</code>
   */
  public org.yefei.qa.mock.grpc.idl.VariableOrBuilder getVariableListOrBuilder(
      int index) {
    return variableList_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < variableList_.size(); i++) {
      output.writeMessage(1, variableList_.get(i));
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < variableList_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, variableList_.get(i));
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.yefei.qa.mock.grpc.idl.VariableDefineRequest)) {
      return super.equals(obj);
    }
    org.yefei.qa.mock.grpc.idl.VariableDefineRequest other = (org.yefei.qa.mock.grpc.idl.VariableDefineRequest) obj;

    boolean result = true;
    result = result && getVariableListList()
        .equals(other.getVariableListList());
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptorForType().hashCode();
    if (getVariableListCount() > 0) {
      hash = (37 * hash) + VARIABLELIST_FIELD_NUMBER;
      hash = (53 * hash) + getVariableListList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.yefei.qa.mock.grpc.idl.VariableDefineRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.yefei.qa.mock.grpc.idl.VariableDefineRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.yefei.qa.mock.grpc.idl.VariableDefineRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.yefei.qa.mock.grpc.idl.VariableDefineRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.yefei.qa.mock.grpc.idl.VariableDefineRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.yefei.qa.mock.grpc.idl.VariableDefineRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.yefei.qa.mock.grpc.idl.VariableDefineRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static org.yefei.qa.mock.grpc.idl.VariableDefineRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.yefei.qa.mock.grpc.idl.VariableDefineRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.yefei.qa.mock.grpc.idl.VariableDefineRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.yefei.qa.mock.grpc.idl.VariableDefineRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code mock.server.grpc.VariableDefineRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:mock.server.grpc.VariableDefineRequest)
      org.yefei.qa.mock.grpc.idl.VariableDefineRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.yefei.qa.mock.grpc.idl.MockServerVariableService.internal_static_mock_server_grpc_VariableDefineRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.yefei.qa.mock.grpc.idl.MockServerVariableService.internal_static_mock_server_grpc_VariableDefineRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.yefei.qa.mock.grpc.idl.VariableDefineRequest.class, org.yefei.qa.mock.grpc.idl.VariableDefineRequest.Builder.class);
    }

    // Construct using org.yefei.qa.mock.grpc.idl.VariableDefineRequest.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getVariableListFieldBuilder();
      }
    }
    public Builder clear() {
      super.clear();
      if (variableListBuilder_ == null) {
        variableList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        variableListBuilder_.clear();
      }
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.yefei.qa.mock.grpc.idl.MockServerVariableService.internal_static_mock_server_grpc_VariableDefineRequest_descriptor;
    }

    public org.yefei.qa.mock.grpc.idl.VariableDefineRequest getDefaultInstanceForType() {
      return org.yefei.qa.mock.grpc.idl.VariableDefineRequest.getDefaultInstance();
    }

    public org.yefei.qa.mock.grpc.idl.VariableDefineRequest build() {
      org.yefei.qa.mock.grpc.idl.VariableDefineRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public org.yefei.qa.mock.grpc.idl.VariableDefineRequest buildPartial() {
      org.yefei.qa.mock.grpc.idl.VariableDefineRequest result = new org.yefei.qa.mock.grpc.idl.VariableDefineRequest(this);
      int from_bitField0_ = bitField0_;
      if (variableListBuilder_ == null) {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          variableList_ = java.util.Collections.unmodifiableList(variableList_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.variableList_ = variableList_;
      } else {
        result.variableList_ = variableListBuilder_.build();
      }
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.yefei.qa.mock.grpc.idl.VariableDefineRequest) {
        return mergeFrom((org.yefei.qa.mock.grpc.idl.VariableDefineRequest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.yefei.qa.mock.grpc.idl.VariableDefineRequest other) {
      if (other == org.yefei.qa.mock.grpc.idl.VariableDefineRequest.getDefaultInstance()) return this;
      if (variableListBuilder_ == null) {
        if (!other.variableList_.isEmpty()) {
          if (variableList_.isEmpty()) {
            variableList_ = other.variableList_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureVariableListIsMutable();
            variableList_.addAll(other.variableList_);
          }
          onChanged();
        }
      } else {
        if (!other.variableList_.isEmpty()) {
          if (variableListBuilder_.isEmpty()) {
            variableListBuilder_.dispose();
            variableListBuilder_ = null;
            variableList_ = other.variableList_;
            bitField0_ = (bitField0_ & ~0x00000001);
            variableListBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getVariableListFieldBuilder() : null;
          } else {
            variableListBuilder_.addAllMessages(other.variableList_);
          }
        }
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      org.yefei.qa.mock.grpc.idl.VariableDefineRequest parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (org.yefei.qa.mock.grpc.idl.VariableDefineRequest) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.util.List<org.yefei.qa.mock.grpc.idl.Variable> variableList_ =
      java.util.Collections.emptyList();
    private void ensureVariableListIsMutable() {
      if (!((bitField0_ & 0x00000001) == 0x00000001)) {
        variableList_ = new java.util.ArrayList<org.yefei.qa.mock.grpc.idl.Variable>(variableList_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.yefei.qa.mock.grpc.idl.Variable, org.yefei.qa.mock.grpc.idl.Variable.Builder, org.yefei.qa.mock.grpc.idl.VariableOrBuilder> variableListBuilder_;

    /**
     * <code>repeated .mock.server.grpc.Variable variableList = 1;</code>
     */
    public java.util.List<org.yefei.qa.mock.grpc.idl.Variable> getVariableListList() {
      if (variableListBuilder_ == null) {
        return java.util.Collections.unmodifiableList(variableList_);
      } else {
        return variableListBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .mock.server.grpc.Variable variableList = 1;</code>
     */
    public int getVariableListCount() {
      if (variableListBuilder_ == null) {
        return variableList_.size();
      } else {
        return variableListBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .mock.server.grpc.Variable variableList = 1;</code>
     */
    public org.yefei.qa.mock.grpc.idl.Variable getVariableList(int index) {
      if (variableListBuilder_ == null) {
        return variableList_.get(index);
      } else {
        return variableListBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .mock.server.grpc.Variable variableList = 1;</code>
     */
    public Builder setVariableList(
        int index, org.yefei.qa.mock.grpc.idl.Variable value) {
      if (variableListBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureVariableListIsMutable();
        variableList_.set(index, value);
        onChanged();
      } else {
        variableListBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .mock.server.grpc.Variable variableList = 1;</code>
     */
    public Builder setVariableList(
        int index, org.yefei.qa.mock.grpc.idl.Variable.Builder builderForValue) {
      if (variableListBuilder_ == null) {
        ensureVariableListIsMutable();
        variableList_.set(index, builderForValue.build());
        onChanged();
      } else {
        variableListBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .mock.server.grpc.Variable variableList = 1;</code>
     */
    public Builder addVariableList(org.yefei.qa.mock.grpc.idl.Variable value) {
      if (variableListBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureVariableListIsMutable();
        variableList_.add(value);
        onChanged();
      } else {
        variableListBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .mock.server.grpc.Variable variableList = 1;</code>
     */
    public Builder addVariableList(
        int index, org.yefei.qa.mock.grpc.idl.Variable value) {
      if (variableListBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureVariableListIsMutable();
        variableList_.add(index, value);
        onChanged();
      } else {
        variableListBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .mock.server.grpc.Variable variableList = 1;</code>
     */
    public Builder addVariableList(
        org.yefei.qa.mock.grpc.idl.Variable.Builder builderForValue) {
      if (variableListBuilder_ == null) {
        ensureVariableListIsMutable();
        variableList_.add(builderForValue.build());
        onChanged();
      } else {
        variableListBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .mock.server.grpc.Variable variableList = 1;</code>
     */
    public Builder addVariableList(
        int index, org.yefei.qa.mock.grpc.idl.Variable.Builder builderForValue) {
      if (variableListBuilder_ == null) {
        ensureVariableListIsMutable();
        variableList_.add(index, builderForValue.build());
        onChanged();
      } else {
        variableListBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .mock.server.grpc.Variable variableList = 1;</code>
     */
    public Builder addAllVariableList(
        java.lang.Iterable<? extends org.yefei.qa.mock.grpc.idl.Variable> values) {
      if (variableListBuilder_ == null) {
        ensureVariableListIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, variableList_);
        onChanged();
      } else {
        variableListBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .mock.server.grpc.Variable variableList = 1;</code>
     */
    public Builder clearVariableList() {
      if (variableListBuilder_ == null) {
        variableList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        variableListBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .mock.server.grpc.Variable variableList = 1;</code>
     */
    public Builder removeVariableList(int index) {
      if (variableListBuilder_ == null) {
        ensureVariableListIsMutable();
        variableList_.remove(index);
        onChanged();
      } else {
        variableListBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .mock.server.grpc.Variable variableList = 1;</code>
     */
    public org.yefei.qa.mock.grpc.idl.Variable.Builder getVariableListBuilder(
        int index) {
      return getVariableListFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .mock.server.grpc.Variable variableList = 1;</code>
     */
    public org.yefei.qa.mock.grpc.idl.VariableOrBuilder getVariableListOrBuilder(
        int index) {
      if (variableListBuilder_ == null) {
        return variableList_.get(index);  } else {
        return variableListBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .mock.server.grpc.Variable variableList = 1;</code>
     */
    public java.util.List<? extends org.yefei.qa.mock.grpc.idl.VariableOrBuilder> 
         getVariableListOrBuilderList() {
      if (variableListBuilder_ != null) {
        return variableListBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(variableList_);
      }
    }
    /**
     * <code>repeated .mock.server.grpc.Variable variableList = 1;</code>
     */
    public org.yefei.qa.mock.grpc.idl.Variable.Builder addVariableListBuilder() {
      return getVariableListFieldBuilder().addBuilder(
          org.yefei.qa.mock.grpc.idl.Variable.getDefaultInstance());
    }
    /**
     * <code>repeated .mock.server.grpc.Variable variableList = 1;</code>
     */
    public org.yefei.qa.mock.grpc.idl.Variable.Builder addVariableListBuilder(
        int index) {
      return getVariableListFieldBuilder().addBuilder(
          index, org.yefei.qa.mock.grpc.idl.Variable.getDefaultInstance());
    }
    /**
     * <code>repeated .mock.server.grpc.Variable variableList = 1;</code>
     */
    public java.util.List<org.yefei.qa.mock.grpc.idl.Variable.Builder> 
         getVariableListBuilderList() {
      return getVariableListFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.yefei.qa.mock.grpc.idl.Variable, org.yefei.qa.mock.grpc.idl.Variable.Builder, org.yefei.qa.mock.grpc.idl.VariableOrBuilder> 
        getVariableListFieldBuilder() {
      if (variableListBuilder_ == null) {
        variableListBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            org.yefei.qa.mock.grpc.idl.Variable, org.yefei.qa.mock.grpc.idl.Variable.Builder, org.yefei.qa.mock.grpc.idl.VariableOrBuilder>(
                variableList_,
                ((bitField0_ & 0x00000001) == 0x00000001),
                getParentForChildren(),
                isClean());
        variableList_ = null;
      }
      return variableListBuilder_;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:mock.server.grpc.VariableDefineRequest)
  }

  // @@protoc_insertion_point(class_scope:mock.server.grpc.VariableDefineRequest)
  private static final org.yefei.qa.mock.grpc.idl.VariableDefineRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.yefei.qa.mock.grpc.idl.VariableDefineRequest();
  }

  public static org.yefei.qa.mock.grpc.idl.VariableDefineRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<VariableDefineRequest>
      PARSER = new com.google.protobuf.AbstractParser<VariableDefineRequest>() {
    public VariableDefineRequest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new VariableDefineRequest(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<VariableDefineRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<VariableDefineRequest> getParserForType() {
    return PARSER;
  }

  public org.yefei.qa.mock.grpc.idl.VariableDefineRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

